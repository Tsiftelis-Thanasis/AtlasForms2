'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class atlasStatisticsEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=atlasStatisticsEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property AspNetRoles() As DbSet(Of AspNetRoles)
    Public Overridable Property AspNetUserClaims() As DbSet(Of AspNetUserClaims)
    Public Overridable Property AspNetUserLogins() As DbSet(Of AspNetUserLogins)
    Public Overridable Property AspNetUsers() As DbSet(Of AspNetUsers)
    Public Overridable Property CupDiataksi() As DbSet(Of CupDiataksi)
    Public Overridable Property DiorganwshTable() As DbSet(Of DiorganwshTable)
    Public Overridable Property GamesTable() As DbSet(Of GamesTable)
    Public Overridable Property GamesTable_h() As DbSet(Of GamesTable_h)
    Public Overridable Property GipedaTable() As DbSet(Of GipedaTable)
    Public Overridable Property KathgoriesTable() As DbSet(Of KathgoriesTable)
    Public Overridable Property OmilosTable() As DbSet(Of OmilosTable)
    Public Overridable Property PlayersStatisticsTable() As DbSet(Of PlayersStatisticsTable)
    Public Overridable Property PlayersStatisticsTable_h() As DbSet(Of PlayersStatisticsTable_h)
    Public Overridable Property PlayersTable() As DbSet(Of PlayersTable)
    Public Overridable Property PlayoffsDiataksi() As DbSet(Of PlayoffsDiataksi)
    Public Overridable Property SeasonTable() As DbSet(Of SeasonTable)
    Public Overridable Property TeamsandKathgoriesTable() As DbSet(Of TeamsandKathgoriesTable)
    Public Overridable Property TeamsandPlayersTable() As DbSet(Of TeamsandPlayersTable)
    Public Overridable Property TeamsStatisticsTable() As DbSet(Of TeamsStatisticsTable)
    Public Overridable Property TeamsStatisticsTable_h() As DbSet(Of TeamsStatisticsTable_h)
    Public Overridable Property TeamsTable() As DbSet(Of TeamsTable)
    Public Overridable Property UserLogins() As DbSet(Of UserLogins)
    Public Overridable Property AgwnistikesTable() As DbSet(Of AgwnistikesTable)
    Public Overridable Property temprankings() As DbSet(Of temprankings)
    Public Overridable Property temprankings2() As DbSet(Of temprankings2)
    Public Overridable Property temprankingsgroups() As DbSet(Of temprankingsgroups)
    Public Overridable Property temprankingsgroups2() As DbSet(Of temprankingsgroups2)
    Public Overridable Property ZeroPointsRankingTeams() As DbSet(Of ZeroPointsRankingTeams)

    <DbFunction("atlasStatisticsEntities", "fn_getTeamstats")>
    Public Overridable Function fn_getTeamstats(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), omilos As Nullable(Of Integer), kathgoria As Nullable(Of Integer), teamid As Nullable(Of Integer)) As IQueryable(Of fn_getTeamstats_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim omilosParameter As ObjectParameter = If(omilos.HasValue, New ObjectParameter("omilos", omilos), New ObjectParameter("omilos", GetType(Integer)))

        Dim kathgoriaParameter As ObjectParameter = If(kathgoria.HasValue, New ObjectParameter("kathgoria", kathgoria), New ObjectParameter("kathgoria", GetType(Integer)))

        Dim teamidParameter As ObjectParameter = If(teamid.HasValue, New ObjectParameter("teamid", teamid), New ObjectParameter("teamid", GetType(Integer)))

         Return DirectCast(Me, IObjectContextAdapter).ObjectContext.CreateQuery(Of fn_getTeamstats_Result)("[atlasStatisticsEntities].[fn_getTeamstats](@season, @diorganwsh, @omilos, @kathgoria, @teamid)", seasonParameter, diorganwshParameter, omilosParameter, kathgoriaParameter, teamidParameter)
    End Function

    Public Overridable Function getallplayerstats(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), omilos As Nullable(Of Integer), kathgoria As Nullable(Of Integer), team As Nullable(Of Integer)) As ObjectResult(Of getallplayerstats_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim omilosParameter As ObjectParameter = If(omilos.HasValue, New ObjectParameter("omilos", omilos), New ObjectParameter("omilos", GetType(Integer)))

        Dim kathgoriaParameter As ObjectParameter = If(kathgoria.HasValue, New ObjectParameter("kathgoria", kathgoria), New ObjectParameter("kathgoria", GetType(Integer)))

        Dim teamParameter As ObjectParameter = If(team.HasValue, New ObjectParameter("team", team), New ObjectParameter("team", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getallplayerstats_Result)("getallplayerstats", seasonParameter, diorganwshParameter, omilosParameter, kathgoriaParameter, teamParameter)
    End Function

    Public Overridable Function getallteamsrankings(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), omilos As Nullable(Of Integer), kathgoria As Nullable(Of Integer)) As ObjectResult(Of getallteamsrankings_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim omilosParameter As ObjectParameter = If(omilos.HasValue, New ObjectParameter("omilos", omilos), New ObjectParameter("omilos", GetType(Integer)))

        Dim kathgoriaParameter As ObjectParameter = If(kathgoria.HasValue, New ObjectParameter("kathgoria", kathgoria), New ObjectParameter("kathgoria", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getallteamsrankings_Result)("getallteamsrankings", seasonParameter, diorganwshParameter, omilosParameter, kathgoriaParameter)
    End Function

    Public Overridable Function getallteamstats(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), omilos As Nullable(Of Integer), kathgoria As Nullable(Of Integer)) As ObjectResult(Of getallteamstats_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim omilosParameter As ObjectParameter = If(omilos.HasValue, New ObjectParameter("omilos", omilos), New ObjectParameter("omilos", GetType(Integer)))

        Dim kathgoriaParameter As ObjectParameter = If(kathgoria.HasValue, New ObjectParameter("kathgoria", kathgoria), New ObjectParameter("kathgoria", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getallteamstats_Result)("getallteamstats", seasonParameter, diorganwshParameter, omilosParameter, kathgoriaParameter)
    End Function

    Public Overridable Function getCupteamsstatsbydiataksi(diataksiid As Nullable(Of Integer), diorganwshid As Nullable(Of Integer)) As ObjectResult(Of getCupteamsstatsbydiataksi_Result)
        Dim diataksiidParameter As ObjectParameter = If(diataksiid.HasValue, New ObjectParameter("diataksiid", diataksiid), New ObjectParameter("diataksiid", GetType(Integer)))

        Dim diorganwshidParameter As ObjectParameter = If(diorganwshid.HasValue, New ObjectParameter("diorganwshid", diorganwshid), New ObjectParameter("diorganwshid", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getCupteamsstatsbydiataksi_Result)("getCupteamsstatsbydiataksi", diataksiidParameter, diorganwshidParameter)
    End Function

    Public Overridable Function getplayerstats(playerid As Nullable(Of Integer), seasonid As Nullable(Of Integer), diorganwshid As Nullable(Of Integer)) As ObjectResult(Of getplayerstats_Result)
        Dim playeridParameter As ObjectParameter = If(playerid.HasValue, New ObjectParameter("playerid", playerid), New ObjectParameter("playerid", GetType(Integer)))

        Dim seasonidParameter As ObjectParameter = If(seasonid.HasValue, New ObjectParameter("seasonid", seasonid), New ObjectParameter("seasonid", GetType(Integer)))

        Dim diorganwshidParameter As ObjectParameter = If(diorganwshid.HasValue, New ObjectParameter("diorganwshid", diorganwshid), New ObjectParameter("diorganwshid", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getplayerstats_Result)("getplayerstats", playeridParameter, seasonidParameter, diorganwshidParameter)
    End Function

    Public Overridable Function getplayoffteamsstatsbydiataksi(diataksiid As Nullable(Of Integer), diorganwshid As Nullable(Of Integer)) As ObjectResult(Of getplayoffteamsstatsbydiataksi_Result)
        Dim diataksiidParameter As ObjectParameter = If(diataksiid.HasValue, New ObjectParameter("diataksiid", diataksiid), New ObjectParameter("diataksiid", GetType(Integer)))

        Dim diorganwshidParameter As ObjectParameter = If(diorganwshid.HasValue, New ObjectParameter("diorganwshid", diorganwshid), New ObjectParameter("diorganwshid", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getplayoffteamsstatsbydiataksi_Result)("getplayoffteamsstatsbydiataksi", diataksiidParameter, diorganwshidParameter)
    End Function

    Public Overridable Function GetReportStat1(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), agwnistiki As Nullable(Of Integer)) As ObjectResult(Of GetReportStat1_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim agwnistikiParameter As ObjectParameter = If(agwnistiki.HasValue, New ObjectParameter("agwnistiki", agwnistiki), New ObjectParameter("agwnistiki", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetReportStat1_Result)("GetReportStat1", seasonParameter, diorganwshParameter, agwnistikiParameter)
    End Function

    Public Overridable Function GetReportStat2(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), agwnistiki As Nullable(Of Integer)) As ObjectResult(Of GetReportStat2_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim agwnistikiParameter As ObjectParameter = If(agwnistiki.HasValue, New ObjectParameter("agwnistiki", agwnistiki), New ObjectParameter("agwnistiki", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetReportStat2_Result)("GetReportStat2", seasonParameter, diorganwshParameter, agwnistikiParameter)
    End Function

    Public Overridable Function GetReportStat3(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), agwnistiki As Nullable(Of Integer)) As ObjectResult(Of GetReportStat3_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim agwnistikiParameter As ObjectParameter = If(agwnistiki.HasValue, New ObjectParameter("agwnistiki", agwnistiki), New ObjectParameter("agwnistiki", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetReportStat3_Result)("GetReportStat3", seasonParameter, diorganwshParameter, agwnistikiParameter)
    End Function

    Public Overridable Function GetReportStat4(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), agwnistiki As Nullable(Of Integer)) As ObjectResult(Of GetReportStat4_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim agwnistikiParameter As ObjectParameter = If(agwnistiki.HasValue, New ObjectParameter("agwnistiki", agwnistiki), New ObjectParameter("agwnistiki", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetReportStat4_Result)("GetReportStat4", seasonParameter, diorganwshParameter, agwnistikiParameter)
    End Function

    Public Overridable Function GetReportStat5(season As Nullable(Of Integer), diorganwsh As Nullable(Of Integer), agwnistiki As Nullable(Of Integer)) As ObjectResult(Of GetReportStat5_Result)
        Dim seasonParameter As ObjectParameter = If(season.HasValue, New ObjectParameter("season", season), New ObjectParameter("season", GetType(Integer)))

        Dim diorganwshParameter As ObjectParameter = If(diorganwsh.HasValue, New ObjectParameter("diorganwsh", diorganwsh), New ObjectParameter("diorganwsh", GetType(Integer)))

        Dim agwnistikiParameter As ObjectParameter = If(agwnistiki.HasValue, New ObjectParameter("agwnistiki", agwnistiki), New ObjectParameter("agwnistiki", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetReportStat5_Result)("GetReportStat5", seasonParameter, diorganwshParameter, agwnistikiParameter)
    End Function

    Public Overridable Function getteamstats(teamid As Nullable(Of Integer), seasonid As Nullable(Of Integer), diorganwshid As Nullable(Of Integer), omilosid As Nullable(Of Integer), kathgoriaid As Nullable(Of Integer)) As ObjectResult(Of getteamstats_Result)
        Dim teamidParameter As ObjectParameter = If(teamid.HasValue, New ObjectParameter("teamid", teamid), New ObjectParameter("teamid", GetType(Integer)))

        Dim seasonidParameter As ObjectParameter = If(seasonid.HasValue, New ObjectParameter("seasonid", seasonid), New ObjectParameter("seasonid", GetType(Integer)))

        Dim diorganwshidParameter As ObjectParameter = If(diorganwshid.HasValue, New ObjectParameter("diorganwshid", diorganwshid), New ObjectParameter("diorganwshid", GetType(Integer)))

        Dim omilosidParameter As ObjectParameter = If(omilosid.HasValue, New ObjectParameter("omilosid", omilosid), New ObjectParameter("omilosid", GetType(Integer)))

        Dim kathgoriaidParameter As ObjectParameter = If(kathgoriaid.HasValue, New ObjectParameter("kathgoriaid", kathgoriaid), New ObjectParameter("kathgoriaid", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of getteamstats_Result)("getteamstats", teamidParameter, seasonidParameter, diorganwshidParameter, omilosidParameter, kathgoriaidParameter)
    End Function

    Public Overridable Function GetWeeklyReportStat1(currentdate As Nullable(Of Date)) As ObjectResult(Of GetWeeklyReportStat1_Result)
        Dim currentdateParameter As ObjectParameter = If(currentdate.HasValue, New ObjectParameter("currentdate", currentdate), New ObjectParameter("currentdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetWeeklyReportStat1_Result)("GetWeeklyReportStat1", currentdateParameter)
    End Function

    Public Overridable Function GetWeeklyReportStat2(currentdate As Nullable(Of Date)) As ObjectResult(Of GetWeeklyReportStat2_Result)
        Dim currentdateParameter As ObjectParameter = If(currentdate.HasValue, New ObjectParameter("currentdate", currentdate), New ObjectParameter("currentdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetWeeklyReportStat2_Result)("GetWeeklyReportStat2", currentdateParameter)
    End Function

    Public Overridable Function GetWeeklyReportStat3(currentdate As Nullable(Of Date)) As ObjectResult(Of GetWeeklyReportStat3_Result)
        Dim currentdateParameter As ObjectParameter = If(currentdate.HasValue, New ObjectParameter("currentdate", currentdate), New ObjectParameter("currentdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetWeeklyReportStat3_Result)("GetWeeklyReportStat3", currentdateParameter)
    End Function

    Public Overridable Function GetWeeklyReportStat4(currentdate As Nullable(Of Date)) As ObjectResult(Of GetWeeklyReportStat4_Result)
        Dim currentdateParameter As ObjectParameter = If(currentdate.HasValue, New ObjectParameter("currentdate", currentdate), New ObjectParameter("currentdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetWeeklyReportStat4_Result)("GetWeeklyReportStat4", currentdateParameter)
    End Function

    Public Overridable Function GetWeeklyReportStat5(currentdate As Nullable(Of Date)) As ObjectResult(Of GetWeeklyReportStat5_Result)
        Dim currentdateParameter As ObjectParameter = If(currentdate.HasValue, New ObjectParameter("currentdate", currentdate), New ObjectParameter("currentdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of GetWeeklyReportStat5_Result)("GetWeeklyReportStat5", currentdateParameter)
    End Function

End Class
